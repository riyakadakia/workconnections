apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

project.version = 0.1
ext.pegasusVersion = '27.7.18'
//ext.parseqVersion = "2.0.5"
ext.jsonSchemaValidatorVersion = "2.2.6"

ext.spec = [
  "product" : [
      "pegasus" : [
      "data" : "com.linkedin.pegasus:data:"+pegasusVersion,
      "generator" : "com.linkedin.pegasus:generator:"+pegasusVersion,
      "restliClient" : "com.linkedin.pegasus:restli-client:"+pegasusVersion,
      "restliServer" : "com.linkedin.pegasus:restli-server:"+pegasusVersion,
      "restliTools" : "com.linkedin.pegasus:restli-tools:"+pegasusVersion,
      "restliCommon" : "com.linkedin.pegasus:restli-common:"+pegasusVersion,
 	  "r2Netty" : "com.linkedin.pegasus:r2-netty:"+pegasusVersion,
	  "gradlePlugins" : "com.linkedin.pegasus:gradle-plugins:" + pegasusVersion,
      "restliNettyStandalone" : "com.linkedin.pegasus:restli-netty-standalone:"+pegasusVersion,
	  "restliServerStandalone" : "com.linkedin.pegasus:restli-server-standalone:"+pegasusVersion
    ],
    "apache" : [
      "commonsConfiguration" : 'org.apache.commons-configuration:1.9'
    ],
    "json-schema-validator": [
      "json-schema-validator" : "com.github.fge:json-schema-validator:"+jsonSchemaValidatorVersion
    ],
    "ext" : [
      'servletApi': 'javax.servlet:javax.servlet-api:3.0.1'
    ]
  ]
]

buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = "https://linkedin.jfrog.io/artifactory/open-source"
    }
  }
  dependencies {
    classpath group: 'com.linkedin.pegasus', name: 'gradle-plugins', version: '27.7.18'
  }
}

subprojects {
  apply plugin: 'maven-publish'
  afterEvaluate {
    // add the standard pegasus dependencies wherever the plugin is used
    if (project.plugins.hasPlugin('pegasus')) {
      dependencies {
        dataTemplateCompile spec.product.pegasus.data
		restClientCompile spec.product.pegasus.restliClient
      }
    }
  }

  repositories {
    mavenCentral()
    mavenLocal()
    maven {
		url = "https://linkedin.jfrog.io/artifactory/open-source"
    }
  }
}
